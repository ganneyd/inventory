import "package:freezed_annotation/freezed_annotation.dart";
import "package:inventory_v1/core/util/util.dart";
import "package:inventory_v1/domain/entities/part/part_entity.dart";

// required: associates our `part_model.dart` with the code generated by Freezed
part 'part_model.freezed.dart';
// optional: Since our Part class is serializable, we must add this line.
// But if Part was not serializable, we could skip it.
part 'part_model.g.dart';

///Part Model. Represents a part stored within the database inventory
@freezed
class Part extends PartEntity with _$Part {
  ///Constructor
  ///accepts a [name]
  ///           [nsn]
  ///           [partNumber]
  ///           [location]
  ///           [quantity]
  ///           [requisitionPoint]
  ///           [requisitionQuantity]
  ///           [serialNumber]
  ///           [unitOfIssue]
  factory Part({
    required String name,
    required String nsn,
    required String partNumber,
    required String location,
    required int quantity,
    required int requisitionPoint,
    required int requisitionQuantity,
    required String serialNumber,
    required UnitOfIssue unitOfIssue,
  }) = _PartModel;

  factory Part.fromJson(Map<String, dynamic> json) => _$PartFromJson(json);
}
